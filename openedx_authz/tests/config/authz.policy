############################################
# Example Policies for Scope-based Model
############################################

# ===== Policies (p) =====
# Format: p, subject(role), action, scope, effect
# Note: Scope-based authorization naturally prevents cross-scope access

# Global platform admin: can manage everything
p, role:platform_admin, act:manage, *, allow

# Org admin: can manage all resources within org OpenedX
p, role:org_admin, act:manage, org:OpenedX, allow

# Org editor: can edit resources within org OpenedX
p, role:org_editor, act:edit, org:OpenedX, allow

# Course instructor: can manage resources within a specific course
p, role:course_instructor, act:manage, course-v1:OpenedX+DemoX+CS101, allow

# Reviewer: can only read within a specific library
p, role:library_reviewer, act:read, lib:math-basics, allow

# Org admin all: can manage all orgs
p, role:org_admin_all, act:manage, org:*, allow

# Explictly deny the org admin for one org
p, role:org_admin_all, act:manage, org:2U, deny


# ===== Role Assignments (g) =====
# Format: g, user, role

# Alice is platform admin
g, user:alice, role:platform_admin

# Bob is org admin
g, user:bob, role:org_admin

# Eve is org editor
g, user:eve, role:org_editor

# Carol is course instructor
g, user:carol, role:course_instructor

# David is library reviewer
g, user:david, role:library_reviewer

# Steve is org admin (all orgs)
g, user:steve, role:org_admin_all


# ===== Action Grouping (g2) =====
# Format: g2, high-level-action, implied-action

# manage implies all other actions
g2, act:manage, act:edit
g2, act:manage, act:read
g2, act:manage, act:write
g2, act:manage, act:delete

# edit implies read and write
g2, act:edit, act:read
g2, act:edit, act:write
